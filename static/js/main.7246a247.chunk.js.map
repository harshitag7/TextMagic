{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","id","type","onClick","toggleMode","htmlFor","Textarea","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","lasttext","setLastText","style","color","backgroundColor","height","value","onChange","event","console","log","target","rows","placeholder","newText","toUpperCase","showAlert","toLowerCase","length","split","filter","element","Alert","alert","role","message","defaultProps","App","setMode","setAlert","msg","setTimeout","Fragment","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7246a247.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nimport React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n\r\n        <\r\n        nav className = { `navbar navbar-expand-lg navbar-${props.mode==='dark'?'dark':'light'} bg-${props.mode==='dark'?'dark':'light'}` } >\r\n        <\r\n        a className = \"navbar-brand\"\r\n        href = \"/\" > { props.title } < /a> {\r\n            /* <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button> */\r\n        }\r\n\r\n        <\r\n        nav className = \"collapse navbar-collapse\"\r\n        id = \"navbarSupportedContent\" >\r\n        <\r\n        ul className = \"navbar-nav mr-auto\" >\r\n        <\r\n        li className = \"nav-item active\" >\r\n        <\r\n        a className = \"nav-link\"\r\n        href = \"/\" > Home < span className = \"sr-only\" > (current) < /span></a >\r\n        <\r\n        /li> <\r\n        li className = \"nav-item\" >\r\n        <\r\n        a className = \"nav-link\"\r\n        href = \"/\" > About < /a> <\r\n        /li> <\r\n        li className = \"nav-item dropdown\" > {\r\n            /* <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                      Dropdown\r\n                    </a> */\r\n        } {\r\n            /* <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                      <a className=\"dropdown-item\" href=\"/\">Action</a>\r\n                      <a className=\"dropdown-item\" href=\"/\">Another action</a>\r\n                      <div className=\"dropdown-divider\"></div>\r\n                      <a className=\"dropdown-item\" href=\"/\">Something else here</a>\r\n                    </div> */\r\n        } <\r\n        /li> {\r\n            /* <li className=\"nav-item\">\r\n                    <a className=\"nav-link disabled\" href=\"/\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                  </li> */\r\n        } <\r\n        /ul> {\r\n            /* <form className=\"form-inline my-2 my-lg-0\">\r\n                  <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                  <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form> */\r\n        } <\r\n        div className = { `custom-control custom-switch text-${props.mode==='dark'?'light':'dark'}` } >\r\n        <\r\n        input type = \"checkbox\"\r\n        className = \"custom-control-input\"\r\n        onClick = { props.toggleMode }\r\n        id = \"customSwitch1\" / >\r\n        <\r\n        label className = \"custom-control-label\"\r\n        htmlFor = \"customSwitch1\" > < /label> <\r\n        /div> <\r\n        /nav> <\r\n        /nav>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nNavbar.propTypes = { //p small her in PropTypes\r\n    title: PropTypes.string,\r\n    mode: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Title',\r\n    mode: 'dark'\r\n}","import React, { useState } from 'react'\r\n//useState hook imported\r\n// style is a object right? style = {object} \r\n//we we want to manupulate the style with javascript then we need to put first curly brace for javascript then inside first next curly brace for object\r\n// style = { {object} }\r\nexport default function Textarea(props) {\r\n\r\n    const uppercase = () => {\r\n        console.log('uppercase button clicked');\r\n        setLastText(text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert('success', 'Text converted to UPPERCASE')\r\n    }\r\n\r\n    const lowercase = () => {\r\n        console.log('lowercase button clicked');\r\n        setLastText(text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('success', 'Text converted to lowercase');\r\n\r\n    }\r\n\r\n    const changeFunc = (event) => {\r\n        console.log('onChange triggered');\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    const clearBox = () => {\r\n        setLastText(text);\r\n        setText('');\r\n        props.showAlert('success', 'Box is cleared');\r\n    }\r\n\r\n\r\n    const previewText = () => {\r\n        setText(lasttext);\r\n    }\r\n\r\n    const [text, setText] = useState('Welcome!');\r\n    const [lasttext, setLastText] = useState('Welcome!');\r\n\r\n    return (\r\n\r\n\r\n        <\r\n        div style = {\r\n            { color: props.mode === 'dark' ? 'white' : 'black', backgroundColor: props.mode === 'light' ? 'white' : 'black', height: '100vh' } } >\r\n        <\r\n        div style = {\r\n            { color: props.mode === 'dark' ? 'white' : 'black', backgroundColor: props.mode === 'light' ? 'white' : 'black' } } >\r\n\r\n        <\r\n        div className = \"container\"\r\n        style = {\r\n            { color: props.mode === 'dark' ? 'white' : 'black' } } >\r\n        <\r\n        div className = \"form-group text-center\" >\r\n        <\r\n        label htmlFor = \"exampleFormControlTextarea1\" > < h1 className = \"my-4\"\r\n        style = {\r\n            { color: props.mode === 'dark' ? 'white' : 'black' } } > Text Converter Box < /h1></label >\r\n        <\r\n        textarea className = \"form-control \"\r\n        value = { text }\r\n        onChange = { changeFunc }\r\n        style = {\r\n            { backgroundColor: props.mode === 'dark' ? 'black' : 'white', color: props.mode === 'dark' ? 'white' : 'black' } }\r\n        id = \"exampleFormControlTextarea1\"\r\n        rows = \"11\"\r\n        placeholder = \"Enter or paste the text here\" > < /textarea> <\r\n        /div> <\r\n        button className = \"btn btn-primary my-2 mx-2\"\r\n        onClick = { uppercase } > UPPERCASE < /button> <\r\n        button className = \"btn btn-primary my-2 mx-2\"\r\n        onClick = { lowercase } > lowercase < /button> <\r\n        button className = \"btn btn-primary my-2 mx-2\"\r\n        onClick = { clearBox } > Clear Box < /button> <\r\n        button className = \"btn btn-primary my-2 mx-2\"\r\n        onClick = { previewText } > Preview Text < /button> <\r\n        p className = \"mx-2 my-1\" > characters: < script > < /script>{text.length} </p >\r\n        <\r\n        p className = \"mx-2\" > words: { text.split(' ').filter((element) => { return element.length !== 0 }).length } < /p>\r\n\r\n        { /* <p>characters : {text.length} </p> */ } <\r\n        /div>\r\n\r\n        <\r\n        /div> <\r\n        /div>\r\n\r\n\r\n    )\r\n};","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return ( <\r\n        div style = {\r\n            { height: '50px', backgroundColor: props.mode === 'dark' ? 'black' : 'white' } } > {\r\n            props.alert && < div className = { `alert mb-0 alert-${props.alert.type} alert-dismissible fade show` }\r\n            role = \"alert\" >\r\n            <\r\n            strong > Hey! < /strong> {`${props.alert.message}`} <\r\n            /div>} <\r\n            /div>\r\n        )\r\n    }","// import logo from './logo.svg';\nimport React, { useState } from 'react'\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import Button from 'react-bootstrap/Button';\n\n\n// import { Button } from 'react-bootstrap';\n// import { Button } from 'react-bootstrap';\nimport './App.css';\n\n//chalaki --> alert ko chupane ki (we did props.alert && {code}) & seted alert as null\n\n// import About from './components/About.js';\nimport Navbar from './components/Navbar.js';\nimport Textarea from './components/Textarea.js';\nimport Alert from './components/Alert.js';\n\n//alert is a object here\n\nfunction App() {\n\n    const [mode, setMode] = useState('light');\n    const [alert, setAlert] = useState(null)\n\n    const toggleMode = () => {\n        if (mode === 'light') {\n            setMode('dark');\n            showAlert('success', 'Dark mode is on');\n            setTimeout(() => {\n                setAlert(null)\n            }, 1500);\n            // document.body.style.backgroundColor = 'black';\n        } else {\n            setMode('light');\n            showAlert('success', 'Light mode is on');\n            setTimeout(() => {\n                setAlert(null)\n            }, 1500);\n            // document.body.style.backgroundColor = 'white';\n        }\n    }\n\n    const showAlert = (type, msg) => {\n        setAlert({\n            type: type,\n            message: msg\n        })\n        setTimeout(() => {\n            setAlert(null)\n        }, 1500);\n    }\n\n\n\n    return ( <\n        >\n        <\n        Navbar title = 'TextMagic'\n        mode = { mode }\n        toggleMode = { toggleMode }\n        /> <\n        Alert alert = { alert }\n        mode = { mode }\n        /> <\n        Textarea mode = { mode }\n        showAlert = { showAlert }\n        /> { /* <About />  */ } <\n        />\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}